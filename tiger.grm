%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm
    program
  | letexp | funexp | funargs
  | exp | expseq
  | decs | dec
  | tydec | ty | tyfields | tyfield
  | vardec
  | fundec
  | array
  | lvalue | lval
  | record | recfields | recfield
  | arith | arithterm | arithop
  | comp | compterm | compop

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
	DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus_id")

%%

program: letexp ()

letexp: LET decs IN expseq END ()

expseq: exp ()
  | exp SEMICOLON exp ()

exp: letexp()
  | funexp ()
  | lvalue ()
  | lvalue ASSIGN exp ()
  | array ()
  | record ()
  | STRING ()
  | NIL ()
  | LPAREN RPAREN ()
  | IF exp THEN exp ELSE exp ()
  | arith ()
  | comp ()

arith: arithterm () | arith arithop arithterm ()

arithterm: INT ()

arithop: PLUS ()
  | MINUS ()
  | TIMES ()
  | DIVIDE ()

comp: compterm compop comp ()

compterm: ID ()

compop: EQ () 
  | LT GT ()
  | LT ()
  | GT ()
  | LT EQ ()
  | GT EQ ()

array: ID LBRACK exp RBRACK OF exp ()

record: ID LBRACE recfields RBRACE ()

recfields: ()
  | recfield ()

recfield: ID EQ exp ()
  | ID EQ exp COMMA recfield ()

funexp: ID LPAREN RPAREN ()
  | ID LPAREN funargs RPAREN ()

funargs: exp () 
  | exp COMMA funargs ()

decs: dec decs ()
  | ()

dec: tydec ()
  | vardec ()
  | fundec ()

tydec: TYPE ID EQ ty ()

ty: ID ()
  | LBRACE tyfields RBRACE ()
  | ARRAY OF ID ()

tyfields: ()
  | tyfield ()

tyfield: ID COLON ID ()
  | ID COLON ID COMMA tyfield ()

vardec: VAR ID ASSIGN exp ()
  | VAR ID COLON ID ASSIGN exp ()

fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp ()
  | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp ()

lvalue: ID lval ()

lval: DOT ID lval () 
  | LBRACK exp RBRACK lval ()
  | ()

